@startuml
skinparam backgroundColor #F0F8FF
skinparam defaultFontColor #333333
skinparam arrowColor #666666

' Define borders for all elements
skinparam entity {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam control {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam participant {
  BorderColor #666666
  BackgroundColor #DDDDDD
}



participant "P2P Server" as P2PServer
participant "P2PClient" as P2PClient
database "Blockchain Client" as BlockchainClient
database "Block Validation Client" as BlockValidationClient
database "Validator Client" as ValidatorClient
participant "Echo (HTTP Server)" as HTTPServer
queue "PubSub System" as PubSub
queue "Connect to Static Peers" as StaticPeers
queue "Set Topic Handlers" as TopicHandlers

P2PServer -> P2PServer: NewServer
activate P2PServer

P2PServer -> P2PClient: Creates P2PClient
P2PClient --> P2PServer


P2PServer -> P2PServer: Sets up topics & notification channel

P2PServer -> P2PServer: Calls Init
activate P2PServer
P2PServer -> BlockchainClient: Create Blockchain Client
BlockchainClient --> P2PServer
P2PServer -> BlockValidationClient: Create BlockValidation Client
BlockValidationClient --> P2PServer
P2PServer -> ValidatorClient: Create Validator Client
ValidatorClient --> P2PServer

P2PServer -> P2PServer: Sets HTTP Address from config
deactivate P2PServer

P2PServer -> P2PServer: Calls Start
activate P2PServer
P2PServer -> HTTPServer: Setup Echo Server (Middleware, Routes)
HTTPServer --> P2PServer
P2PServer -> P2PServer: Start P2PClient (Join PubSub Topics)
P2PServer -> StaticPeers: Connect to Static Peers
StaticPeers --> P2PServer
P2PServer -> TopicHandlers: Set Topic Handlers (Subscribe)
TopicHandlers --> P2PServer
P2PServer -> P2PServer: Start blockchain and validator listeners \n (Goroutines)
P2PServer -> P2PServer: Starts HTTP server \n (Goroutine)
deactivate P2PServer

left footer Last Modified On: %date("dd-MMM-yyyy")
@enduml

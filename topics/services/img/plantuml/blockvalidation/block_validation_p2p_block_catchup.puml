@startuml
skinparam backgroundColor #F0F8FF
skinparam defaultFontColor #333333
skinparam arrowColor #666666

' Define borders for all elements
skinparam entity {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam control {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam participant {
  BorderColor #666666
  BackgroundColor #DDDDDD
}



queue "catchupCh\nCatchup Channel" as CatchupCh
participant "Validation Service" as ValidationService
entity "Block Validation\n(BlockValidation.go)" as BVVB
participant "Blockchain Client" as BC
participant "Util HTTP Request" as Util

CatchupCh -> ValidationService: catchup(ctx, fromBlock, baseURL)
activate ValidationService

ValidationService -> BC: GetBlockExists(ctx, fromBlock.Hash())
BC --> ValidationService: exists / not exists

alt Block does not exist
    ValidationService -> ValidationService: getBlockHeaders(ctx, fromBlock.Header.HashPrevBlock, baseURL)
    ValidationService -> ValidationService: Reverse blockHeaders

    loop For each batch of block headers
        loop For each blockHeader in batch
            ValidationService -> BC: GetBlockExists(ctx, blockHeader.Hash())
            BC --> ValidationService: exists / not exists

            alt Block does not exist
                ValidationService -> Util: getBlocks(ctx, blockHeader.Hash(), batchSize, baseURL)
                Util --> ValidationService: blocks

                loop For each block
                    ValidationService -> BVVB: ValidateBlock(ctx, block, baseURL)
                    alt Validation fails
                        BVVB -> BC: AddBlock(block, WithInvalid(true))
                        BC --> BVVB: Block marked as invalid
                        note right : Invalid blocks tracked\nto prevent reprocessing\nand chain corruption
                        ValidationService -> ValidationService: UpdatePeerMetrics(peer, invalid)
                        note right : Track peer quality\nto avoid bad peers
                    else Validation succeeds
                        alt Block below checkpoint
                            BVVB -> BVVB: QuickValidate(block)
                            note right : Optimized validation\nfor checkpointed blocks
                        else Block above checkpoint
                            BVVB -> BVVB: FullValidate(block)
                        end
                        BVVB -> BC: AddBlock(block)
                        BC --> BVVB: Block added successfully
                    end
                end
            end
        end
    end
end

ValidationService --> CatchupCh: Catchup complete
deactivate ValidationService

left footer Last Modified On: %date("dd-MMM-yyyy")

@enduml

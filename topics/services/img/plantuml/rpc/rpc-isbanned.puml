@startuml
skinparam backgroundColor #F0F8FF
skinparam defaultFontColor #333333
skinparam arrowColor #666666

' Define borders for all elements
skinparam entity {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam control {
  BorderColor #666666
  BackgroundColor #DDDDDD
}

skinparam participant {
  BorderColor #666666
  BackgroundColor #DDDDDD
}



participant Client
participant "RPC Server" as RPC
participant "P2P Service" as P2P
participant "Ban Manager" as BanMgr

Client -> RPC : IsBannedCmd(address)
activate RPC

RPC -> RPC : Validate IP address format
note right
  Validation checks:
  - Address must be a valid IP
  - Address must not be empty
end note

alt Invalid IP Address
    RPC -> Client : Return error
    note right
        Error response:
        - Code: ErrRPCInvalidParameter
        - Message: "Invalid IP address format"
    end note
else Valid IP Address
    RPC -> P2P : GetBanList(ctx)
    activate P2P

    alt Ban List Retrieval Fails
        P2P --> RPC : Return error
        RPC -> Client : Return error
        note right
            Error response:
            - Code: ErrRPCInternalError
            - Message: "Failed to retrieve ban list"
        end note
    else Ban List Retrieved
        P2P --> RPC : Return ban list
        deactivate P2P

        RPC -> BanMgr : IsBanned(address, banList)
        activate BanMgr
        BanMgr --> RPC : Return ban status and expiration
        deactivate BanMgr

        RPC -> Client : Return ban status
        note right
            Response fields:
            - banned: true/false (whether IP is banned)
            - expires: timestamp (when ban expires, if banned)

            If not banned:
            - banned: false
            - expires: 0
        end note
    end
end

deactivate RPC

left footer Last Modified On: %date("dd-MMM-yyyy")
@enduml
